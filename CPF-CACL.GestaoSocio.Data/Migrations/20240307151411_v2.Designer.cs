// <auto-generated />
using System;
using CPF_CACL.GestaoSocio.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPF_CACL.GestaoSocio.Data.Migrations
{
    [DbContext(typeof(GSContext))]
    [Migration("20240307151411_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Apoio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataApoio")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("EstadoApoio")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("SocioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apoio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Bairro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("MunicipioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Bairro", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Beneficio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("TipoBeneficioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TipoBeneficioId");

                    b.ToTable("Beneficio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Capital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaSocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("CategoriaSocioId");

                    b.ToTable("Capital", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.CategoriaSocio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Quota")
                        .HasColumnType("smallmoney");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CategoriaSocio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Dependente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BI")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("RelacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RelacaoId");

                    b.HasIndex("SocioId");

                    b.ToTable("Dependente", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Despesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApoioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("EstadoDespesa")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ApoioId");

                    b.ToTable("Despesa", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("NIF")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("Cod")
                        .IsUnique();

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("PeriodoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("TipoItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("Cod")
                        .IsUnique();

                    b.HasIndex("PeriodoId");

                    b.HasIndex("SocioId");

                    b.HasIndex("TipoItemId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.ItemApoio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApoioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ForneceorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ApoioId");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("ForneceorId");

                    b.ToTable("ItemApoio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.ItemPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PagamentoId");

                    b.ToTable("ItemPagamento");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Municipio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Municipio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Organismo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Organismo", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Recibo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("TipoPagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("Recibo")
                        .IsUnique();

                    b.HasIndex("SocioId");

                    b.HasIndex("TipoPagamentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagamento", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.PedidoApoio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SocioId");

                    b.ToTable("PedidoApoio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.PerfilUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PerfilUsuario", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Periodo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("date");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UltimoDiaUtil")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("Cod")
                        .IsUnique();

                    b.ToTable("Periodo");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Projecto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("TipoProjectoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TipoProjectoId");

                    b.ToTable("Projecto", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.ProjectoSocio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtribuicao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ProjectoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProjectoId");

                    b.HasIndex("SocioId");

                    b.ToTable("ProjectoSocio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Relacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Relacao", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Saldo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("PagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Recibo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("PagamentoId");

                    b.HasIndex("SocioId");

                    b.ToTable("Saldo", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Socio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BI")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid>("BairroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaminhoFoto")
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("CategoriaSocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Departamento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EstadoSocio")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EstadoSocio");

                    b.Property<string>("Funcao")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Habilitacoes")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LocalDeTrabalho")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeDaMae")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeDoPai")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("OrganismoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Profissao")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("BairroId");

                    b.HasIndex("CategoriaSocioId");

                    b.HasIndex("Cod")
                        .IsUnique();

                    b.HasIndex("OrganismoId");

                    b.ToTable("Socio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.TipoBeneficio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoBeneficio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.TipoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoItem", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.TipoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoPagamento", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.TipoProjecto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoProjecto", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("PerfilUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PerfilUsuarioId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Apoio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Socio", "Socio")
                        .WithMany("Apoios")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Apoios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Socio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Bairro", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Municipio", "Municipio")
                        .WithMany("Bairros")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Beneficio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.TipoBeneficio", "TipoBeneficio")
                        .WithMany("Beneficios")
                        .HasForeignKey("TipoBeneficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoBeneficio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Capital", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Beneficio", "Beneficio")
                        .WithMany("Capitais")
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.CategoriaSocio", "CategoriaSocio")
                        .WithMany("Capitais")
                        .HasForeignKey("CategoriaSocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Beneficio");

                    b.Navigation("CategoriaSocio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Dependente", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Relacao", "Relacao")
                        .WithMany("Dependentes")
                        .HasForeignKey("RelacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Socio", "Socio")
                        .WithMany("Dependentes")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Relacao");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Despesa", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Apoio", "Apoio")
                        .WithMany("Despesas")
                        .HasForeignKey("ApoioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apoio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Item", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Periodo", "Periodo")
                        .WithMany("Items")
                        .HasForeignKey("PeriodoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Socio", "Socio")
                        .WithMany("Items")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.TipoItem", "TipoItem")
                        .WithMany("Items")
                        .HasForeignKey("TipoItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Periodo");

                    b.Navigation("Socio");

                    b.Navigation("TipoItem");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.ItemApoio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Apoio", "Apoio")
                        .WithMany("ItemApoios")
                        .HasForeignKey("ApoioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Beneficio", "Beneficio")
                        .WithMany("ItemApoios")
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("ItemApoios")
                        .HasForeignKey("ForneceorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apoio");

                    b.Navigation("Beneficio");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.ItemPagamento", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Item", "Item")
                        .WithMany("ItemPagamnetos")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Pagamento", "Pagamento")
                        .WithMany("ItemPagamnetos")
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Pagamento", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Socio", "Socio")
                        .WithMany("Pagamentos")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.TipoPagamento", "TipoPagamento")
                        .WithMany("Pagamentos")
                        .HasForeignKey("TipoPagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Usuario", null)
                        .WithMany("Pagamentos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Socio");

                    b.Navigation("TipoPagamento");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.PedidoApoio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Socio", "Socio")
                        .WithMany("PedidoApoios")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Projecto", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.TipoProjecto", "TipoProjecto")
                        .WithMany("Projectos")
                        .HasForeignKey("TipoProjectoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoProjecto");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.ProjectoSocio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Projecto", "Projecto")
                        .WithMany("ProjectoSocios")
                        .HasForeignKey("ProjectoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Socio", "Socio")
                        .WithMany("ProjectoSocios")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Projecto");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Saldo", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Pagamento", "Pagamentos")
                        .WithMany("Saldo")
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Socio", "Socios")
                        .WithMany("Saldo")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pagamentos");

                    b.Navigation("Socios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Socio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Bairro", "Bairros")
                        .WithMany("Socios")
                        .HasForeignKey("BairroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.CategoriaSocio", "CategoriaSocio")
                        .WithMany("Socios")
                        .HasForeignKey("CategoriaSocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.Organismo", "Organismo")
                        .WithMany("Socios")
                        .HasForeignKey("OrganismoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bairros");

                    b.Navigation("CategoriaSocio");

                    b.Navigation("Organismo");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Entities.PerfilUsuario", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilUsuarioId");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Apoio", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("ItemApoios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Bairro", b =>
                {
                    b.Navigation("Socios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Beneficio", b =>
                {
                    b.Navigation("Capitais");

                    b.Navigation("ItemApoios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.CategoriaSocio", b =>
                {
                    b.Navigation("Capitais");

                    b.Navigation("Socios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("ItemApoios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Item", b =>
                {
                    b.Navigation("ItemPagamnetos");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Municipio", b =>
                {
                    b.Navigation("Bairros");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Organismo", b =>
                {
                    b.Navigation("Socios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Pagamento", b =>
                {
                    b.Navigation("ItemPagamnetos");

                    b.Navigation("Saldo");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.PerfilUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Periodo", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Projecto", b =>
                {
                    b.Navigation("ProjectoSocios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Relacao", b =>
                {
                    b.Navigation("Dependentes");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Socio", b =>
                {
                    b.Navigation("Apoios");

                    b.Navigation("Dependentes");

                    b.Navigation("Items");

                    b.Navigation("Pagamentos");

                    b.Navigation("PedidoApoios");

                    b.Navigation("ProjectoSocios");

                    b.Navigation("Saldo");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.TipoBeneficio", b =>
                {
                    b.Navigation("Beneficios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.TipoItem", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.TipoPagamento", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.TipoProjecto", b =>
                {
                    b.Navigation("Projectos");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Apoios");

                    b.Navigation("Pagamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
