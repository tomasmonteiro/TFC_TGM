// <auto-generated />
using System;
using CPF_CACL.GestaoSocio.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPF_CACL.GestaoSocio.Data.Migrations
{
    [DbContext(typeof(GSContext))]
    partial class GSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Agregado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BI")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("RelacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RelacaoId");

                    b.HasIndex("SocioId");

                    b.ToTable("Agregado", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Apoio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataApoio")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("EstadoApoio")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallmoney")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("SocioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apoio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Bairro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("MunicipioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Bairro", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Beneficio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("TipoBeneficioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TipoBeneficioId");

                    b.ToTable("Beneficio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Capital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaSocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("smallmoney");

                    b.HasKey("Id");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("CategoriaSocioId");

                    b.ToTable("Capital", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.CategoriaSocio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Quota")
                        .HasColumnType("smallmoney");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CategoriaSocio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Despesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApoioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("EstadoDespesa")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ApoioId");

                    b.ToTable("Despesa", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("NIF")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("Cod")
                        .IsUnique();

                    b.ToTable("Fornecedor", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.ItemApoio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApoioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BeneficioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ForneceorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("smallmoney");

                    b.HasKey("Id");

                    b.HasIndex("ApoioId");

                    b.HasIndex("BeneficioId");

                    b.HasIndex("ForneceorId");

                    b.ToTable("ItemApoio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Municipio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Municipio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Organismo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Organismo", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("TipoPagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SocioId");

                    b.HasIndex("TipoPagamentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagamento", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.PedidoApoio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SocioId");

                    b.ToTable("PedidoApoio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.PerfilUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("PerfilUsuario", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Projecto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("TipoProjectoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TipoProjectoId");

                    b.ToTable("Projecto", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.ProjectoSocio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtribuicao")
                        .HasColumnType("Datetime");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ProjectoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProjectoId");

                    b.HasIndex("SocioId");

                    b.ToTable("ProjectoSocio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Relacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Relacao", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Socio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BI")
                        .HasColumnType("varchar(14)");

                    b.Property<Guid>("BairroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaminhoFoto")
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("CategoriaSocioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cod")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Departamento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("EstadoSocio")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("EstadoSocio");

                    b.Property<string>("Funcao")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Habilitacoes")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LocalDeTrabalho")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeDaMae")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NomeDoPai")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("OrganismoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Profissao")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("BairroId");

                    b.HasIndex("CategoriaSocioId");

                    b.HasIndex("Cod")
                        .IsUnique();

                    b.HasIndex("OrganismoId");

                    b.ToTable("Socio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoBeneficio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoBeneficio", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoPagamento", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoProjecto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoProjecto", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("PerfilUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PerfilUsuarioId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Agregado", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Relacao", "Relacao")
                        .WithMany("Agregados")
                        .HasForeignKey("RelacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Socio", "Socio")
                        .WithMany("Agregados")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Relacao");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Apoio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Socio", "Socio")
                        .WithMany("Apoios")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Usuario", "Usuario")
                        .WithMany("Apoios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Socio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Bairro", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Municipio", "Municipio")
                        .WithMany("Bairros")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Beneficio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoBeneficio", "TipoBeneficio")
                        .WithMany("Beneficios")
                        .HasForeignKey("TipoBeneficioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoBeneficio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Capital", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Beneficio", "Beneficio")
                        .WithMany("Capitais")
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.CategoriaSocio", "CategoriaSocio")
                        .WithMany("Capitais")
                        .HasForeignKey("CategoriaSocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Beneficio");

                    b.Navigation("CategoriaSocio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Despesa", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Apoio", "Apoio")
                        .WithMany("Despesas")
                        .HasForeignKey("ApoioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apoio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.ItemApoio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Apoio", "Apoio")
                        .WithMany("ItemApoios")
                        .HasForeignKey("ApoioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Beneficio", "Beneficio")
                        .WithMany("ItemApoios")
                        .HasForeignKey("BeneficioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Fornecedor", "Fornecedor")
                        .WithMany("ItemApoios")
                        .HasForeignKey("ForneceorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apoio");

                    b.Navigation("Beneficio");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Pagamento", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Socio", "Socio")
                        .WithMany("Pagamentos")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoPagamento", "TipoPagamento")
                        .WithMany("Pagamentos")
                        .HasForeignKey("TipoPagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Usuario", "Usuario")
                        .WithMany("Pagamentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Socio");

                    b.Navigation("TipoPagamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.PedidoApoio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Socio", "Socio")
                        .WithMany("PedidoApoios")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Projecto", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoProjecto", "TipoProjecto")
                        .WithMany("Projectos")
                        .HasForeignKey("TipoProjectoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoProjecto");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.ProjectoSocio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Projecto", "Projecto")
                        .WithMany("ProjectoSocios")
                        .HasForeignKey("ProjectoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Socio", "Socio")
                        .WithMany("ProjectoSocios")
                        .HasForeignKey("SocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Projecto");

                    b.Navigation("Socio");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Socio", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Bairro", "Bairros")
                        .WithMany("Socios")
                        .HasForeignKey("BairroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.CategoriaSocio", "CategoriaSocio")
                        .WithMany("Socios")
                        .HasForeignKey("CategoriaSocioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.Organismo", "Organismo")
                        .WithMany("Socios")
                        .HasForeignKey("OrganismoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bairros");

                    b.Navigation("CategoriaSocio");

                    b.Navigation("Organismo");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Usuario", b =>
                {
                    b.HasOne("CPF_CACL.GestaoSocio.Domain.Models.Entities.PerfilUsuario", "PerfilUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilUsuario");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Apoio", b =>
                {
                    b.Navigation("Despesas");

                    b.Navigation("ItemApoios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Bairro", b =>
                {
                    b.Navigation("Socios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Beneficio", b =>
                {
                    b.Navigation("Capitais");

                    b.Navigation("ItemApoios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.CategoriaSocio", b =>
                {
                    b.Navigation("Capitais");

                    b.Navigation("Socios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Fornecedor", b =>
                {
                    b.Navigation("ItemApoios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Municipio", b =>
                {
                    b.Navigation("Bairros");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Organismo", b =>
                {
                    b.Navigation("Socios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.PerfilUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Projecto", b =>
                {
                    b.Navigation("ProjectoSocios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Relacao", b =>
                {
                    b.Navigation("Agregados");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Socio", b =>
                {
                    b.Navigation("Agregados");

                    b.Navigation("Apoios");

                    b.Navigation("Pagamentos");

                    b.Navigation("PedidoApoios");

                    b.Navigation("ProjectoSocios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoBeneficio", b =>
                {
                    b.Navigation("Beneficios");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoPagamento", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.TipoProjecto", b =>
                {
                    b.Navigation("Projectos");
                });

            modelBuilder.Entity("CPF_CACL.GestaoSocio.Domain.Models.Entities.Usuario", b =>
                {
                    b.Navigation("Apoios");

                    b.Navigation("Pagamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
